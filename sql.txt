sql query
---------------------------------
1) create a table
    create table table_name(
        field datatype etc..
    )

    creating users table
    CREATE TABLE users(
        id int PRIMARY KEY AUTO_INCREMENT ,
        name varchar(50),
        age int,
        address varchar(200)
    )

2) detete a table
    drop table table_name
    drop table users

3) rename a table
    rename table old_table to new_table name
    rename table students to teachers

4)  truncate table 
    truncate table command is used to delete all rows from table and reset primary key to 1 
    truncate table tablename 
    truncate table person 
---------------------------------------------------
1) insert
    add row to table
    1) insert into table_name(fields...) values(data...) 
    insert into person(name,dob,salary,gender,photo) values("samarth","2004-12-01",20000,1,"user.jpeg") ;

    2) insert into table_name values(data...)
    insert into person values("","samarth","2004-12-01",20000,1,"user.jpeg") ;

    insert multiple records
    INSERT INTO person (name, dob, salary, gender, photo) VALUES
    ("Samarth", "2004-12-01", 20000, 1, "user1.jpeg"),
    ("Aarav", "1998-07-15", 35000, 1, "user2.jpeg"),
    ("Neha", "1995-03-22", 40000, 2, "user3.jpeg"),
    ("Rohan", "2000-11-05", 28000, 1, "user4.jpeg"),
    ("Priya", "1997-09-10", 50000, 2, "user5.jpeg"),
    ("Vikram", "1992-06-30", 60000, 1, "user6.jpeg"),
    ("Ananya", "1999-02-18", 32000, 2, "user7.jpeg"),
    ("Kunal", "2001-05-25", 27000, 1, "user8.jpeg"),
    ("Simran", "1996-08-12", 45000, 2, "user9.jpeg"),
    ("Rahul", "1993-04-20", 55000, 1, "user10.jpeg");

2) delete
    delete from table_name where condition ; 

    delete row whos id is 4
    DELETE FROM person WHERE id=4 ;

    delete row whos name is "devarsh"
    DELETE FROM person WHERE name="devarsh";

    delete records of female
    DELETE FROM person WHERE gender=2;

3) update
   update command is used to change existing row's column value. we can change one more column value using update command 

   syntax 
   update tablename set field=value[,field2=value,field3=value] [where condition]

   update all person salary by 99 rupees 
   update person set salary = salary + 99

   increase all person salary by 1 rupees of those person whose salary is below 30000
   update person set salary = salary + 1 where salary<30000 

   decrease salary by 99 rupees of those person whose id are 2 or 3 or 5 or 6 or 9  or 10
   update person set salary= salary - 99 where id=2 or id=3 or id=5 or id=6 or id=9 or id=10
                or 
   update person set salary= salary + 99 where id in(2,3,5,6,9,10)

   update name to 'Divya Kurmari' gender to 0 and birtdate to 01-01-1984 of person whose id is 2 
   update person set name='Divya Kurmari',gender=0,dob='1984-01-01' where id = 2

4) select
    select command is used to fetch records from tables. one can fetch all/selected fields, all/selected records can display records in specified order.

    syntax
    ---------------------------------------------------------------------------
    select *|<fieldlist> from <table> [where <condition>] [group by <fieldname>] [having <condition>]
    [order by <field>]  [limit position,offset]

    fetch all fields of all rows of customers 
    select * from customers

    fetch customerNumber,customerName,city,state,country of all customers

    select customerNumber,customerName,city,state,country from customers

    fetch customerName, city, state and country of those customers are from USA.
    select customerName, city, state , country from customers where country='USA'

    fetch customerNumber, customerName,creditLimit of those customers whose credit limit is below 100000

    select customerNumber, customerName, creditLimit from customers where creditLimit<100000

    fetch customerNumber, customerName,creditLimit of those customers whose credit limit is between 100000 and 200000

    select customerNumber, customerName, creditLimit from customers where creditLimit<100000 and creditLimit>200000

    OR 
    
    select customerNumber, customerName, creditLimit from customers where creditLimit between 100000 and 200000

    fetch customerNumber, customerName, city, state, country of those customers who are from usa or france or spain 

    select customerNumber, customerName, city, state, country from customers where country='USA' or country='france' or country='spain'

    OR 

    select customerNumber, customerName, city, state, country from customers where country in ('USA','france','spain')

    fetch customerNumber, customerName, city, state, country of those customers who are not from usa or france or spain or india 

    select customerNumber, customerName, city, state, country from customers where country!='USA' and country!='france' and country!='spain' and country!='india'

    OR 

    select customerNumber, customerName, city, state, country from customers where country not in ('USA','france','spain','india')

    fetch customerName from customers table whose customerName has wheels anywhere in name 

    select customerName from customers where customerName like '%wheels%'

    fetch unique country names from customers

    select distinct(country) from customers

    Aggregate functions 
    --------------------------------------------------------------------------------
    function which works upon numeric field and always returns single value is called Aggregate functions. 

    do not use fields with Aggregate function as it may give incorrect result. 
	
	1) sum
	used to get total of given numeric field 

    fetch total payments received so far (till now). 
	select sum(amount) as total from payments

	2) avg
	used to get average of given numeric field 
	select avg(amount) as average from payments

	3) min
	used to get minimum value of given numeric field 
	select min(amount) as minimum from payments

	4) max 
	used to get maximum value of given numeric field. 
	select max(amount) as maximum from payments 

	5) count(*)
	used to count no of rows in table as per condition.

    count all rows 
    select count(*) as no_of_payments from payments

    count payments as per conditions  
    count no of payments made by customerNumber 112
    select count(*) from customers where customerNumber=112

we can use where clause with Aggregate functions to do calculation as per conditions. this is very much required. 

fetch total payment amount received in 2004 
    select sum(amount) as total from payments where paymentDate>='2004-01-01' and paymentDate<='2004-12-31'

    or 
    select sum(amount) as total from payments where left(paymentDate,4) = '2004'

fetch total payment amount received in march 2004 
select sum(amount) as total from payments where paymentDate>='2004-03-01' and paymentDate<='2004-03-31'

or 
    select sum(amount) as total from payments where left(paymentDate,7) = '2004-03'

fetch each and every customers total  payments 
select customerNumber,sum(amount) from payments group by customerNumber;


fetch no of orders placed by each and every customers.
select customerNumber,count(*) 'order_count' from orders group by customerNumber;


fetch no of orders in each calendar year 
select left(orderDate,4) as year,count(*) as 'order_count' from orders group by left(orderDate,4)

fetch country name and no of customers from each country 
select country,count(*) as 'country_count' from customers group by country

fetch country name and no of customers from each country of those country where count of customers is above 4 
select country,count(*) as 'country_count' from customers group by country having count(*)>4

fetch no of orders placed by each and every customers of those customers who have given 4 or more orders 

select customerNumber,count(*) as 'order_count' from orders group by customerNumber having count(*)>3;


how to display data in specific  sequence?
we use order by clause in select to display data in specific  sequence. if we dont use order by clause select will display data as per insertion order.

display customerNumber & customerName in ascending order of customerName
select customerNumber,customerName from customers order by customerName

display customerNumber & customerName in descending order of customerName
select customerNumber,customerName from customers order by customerName desc

we can use multiple fields in order by clause
display customerNumber & customerName,country,state,city in ascending order of country then state and then city 


select customerNumber,customerName,country,state,city from customers order by country, state, city

fetch most recent 10 orders 
select * from orders order by orderNumber desc limit 0,10

fetch top 10 largest payments 
select amount from payments order by amount desc limit 0,10

fetch next 10 largest payments
select amount from payments order by amount desc limit 10,10

fetch orderNumber,orderDate,amount & display it in indian format
select orderNumber,DATE_FORMAT(orderDate,'%d-%m-%Y') as orderDate from orders

fetch orderNumber,orderDate,amount & display it in indian format with day name of week 
select orderNumber,DATE_FORMAT(orderDate,'%a %d-%m-%Y') as orderDate from orders;
